Spring은 Java를 가장 Java 답게 사용할 수 있도록 도와주는 프레임 워크

Java의 특징은 충실한 객체지향 개발을 가능하도록 해주는 언어
Java를 이용한 객체지향 개발의 원칙을 깨지 않으며, 특정 프레임워크에 종속적이지 않은
오로지 Java를 이용한 개발이 가능하도록 지원해준다

SOLID 원칙중 DIP, OCP 를 지향할 수 있도록 지원해준다.

장점
1. Java를 Java답게 사용할 수 있도록 설계된 프레임워크
- Java의 기술이 복잡해지면서 Java가 추구하는 객체지향 개발이 흐려져 왔음.
- Spring은 POJO프로그래밍 모델과 철저한 객체지향을 지향
- 이 원칙을 지키기 위해 DI, IOC, AOP 개념이 나오게 됨

2. 자바 엔터프라이즈 개발에 최적화 되어 있음

3. Spring은 단순함과 유연함을 무기로 하고 있음
- 수많은 서드파티 프레임워크의 지원을 받고 있음
- 개발자의 입맛에 맞추어 Spring을 확장할 수 있고 이로써 개발자만의 프레임워크를 만들 수 있음

단점
1. Spring이 추구하는 프로그래밍 모델과 가치관을 알지 못하면 온전히 활용하기 어려움
2. Spring의 문화를 알지 못하게 되면 잘못된 방향으로 사용하게 됨.

스프링은 객체지향 설계와 구현에 관해 특정한 모델과 기법을 억지로 강요하지 않는다.
하지만 오브젝트를 어떻게 효과적으로 설계하고 구현하고, 사용하고, 이를 개선해나갈 것인가에 대한
명쾌한 기준을 마련해준다.